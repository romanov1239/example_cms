<?php
/**
 * Created by PhpStorm.
 * User: d.korablev
 * Date: 23.01.2019
 * Time: 12:59
 */

namespace admin\modules\rbac\behaviors;

use admin\modules\rbac\models\Field;
use admin\modules\rbac\models\Model;
use admin\modules\rbac\models\RoleAssign;
use admin\modules\rbac\models\RoleModelPermission;
use yii\base\Behavior;

class RbacFieldBehavior extends Behavior
{
    /**
     * contains name of table for getting rules and fields
     * @var string
     */
    public $tableName = '';

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * returns fields, that current user can read
     * @return array
     */
    public function getReadableFields(){
        $readableFields = [];
        $model = Model::find()->where(['name' => $this->tableName])->one();
        $fields = Field::find()->where(['model_id' => $model->id])->all();
        foreach ($fields as $field){
            if(RoleModelPermission::find()->where(['role_id' => $this->getRoleId(),'field_id' => $field->id, 'type' => 0])->one()){
                $readableFields[] = $field->name;
            }
        }
        return $readableFields;
    }
    /**
     * returns fields, that current user can write
     * @return array
     */
    public function getWritableFields(){
        $writableFields = [];
        $model = Model::find()->where(['name' => $this->tableName])->one();
        $fields = Field::find()->where(['model_id' => $model->id])->all();
        foreach ($fields as $field){
            if(RoleModelPermission::find()->where(['role_id' => $this->getRoleId(),'field_id' => $field->id, 'type' => 1])->one()){
                $writableFields[] = $field->name;
            }
        }
        $writableFields = [[$writableFields,'safe']];
        return $writableFields;
    }

    /**
     * returns role_id of current user
     * @return mixed
     */
    private function getRoleId(){
        $userId = \Yii::$app->user->id;
        $userRole = RoleAssign::find()->where(['user_id' => $userId])->one();
        $roleId = $userRole->role_id;
        return $roleId;
    }
}